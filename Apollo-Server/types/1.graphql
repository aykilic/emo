
type birim{
  _id:ID
  birimad: String
  createdAt: String
  
}
type kategori{
  _id:ID
  stokturad: String
  parentid: String
  children(_id:ID): kategori
  
}
type User{
  username:String
  lastname:String
  id:String
}
type vars{
  
  images:images
  
}

type images{
  filename:String
  imageurl:String
  publicid:String
  path:String
  id:ID
}
type attr{
  size:String
}

type Stoktur{
  _id:String
  stokturad: String
  parentid: String
  createdAt: String
  vars: [vars]
}
  
  type Varyantalt{
  _id:ID
  color:String
  varyantid: ID
  altvaryantname: String
  vars: [vars]
  createdAt: String
  
}
type Varyant{
  _id:ID
  stokid:ID
  varyantname:String
  Varyantalt:[Varyantalt]
  createdAt: String
}
type Query{
    user(id: ID!): User!
    users: [User!]!
    Query:[kategori]
    birimList:[birim]
    imgurlQuery(id:String!):[Stoktur]
    altimgurlQuery(id:String!):[Varyantalt]
    
    
}
type Mutation {
  createBirim(birimad: String!): birim
  updateBirim(id:String!,birimad: String): birim
  deleteBirim(id:String!): birim
  createUser(data: CreateUserInput!): User
  createStokturu(stokturad: String!, parentid: String): Stoktur
  deleteStokturu(id:String!): Stoktur
  updateStokturu(id:String!,stokturad: String, parentid: String): Stoktur
  updatestokimageurl(id:String!,imageurl: String,filename:String,publicid:String,path:String): Stoktur
  deleteimage(id:String!,imageid:String,path:String): Stoktur
  updateStok(id:String!,variant: StokInput): Stoktur
  updateStokalt(id:String!): Stoktur
}
input StokInput{
  name:String
  value:String
}

input CreateUserInput{
  username: String
  lastname: String
  password: String
}
